scene:
    background:
        color: grey
cameras:
    camera1:
        type: perspective
        focal_length: 2
styles:
    tilt:
        base: lines
        shaders:
            defines:
                PI: 3.1415926535897932384626433832795
                HALF_PI: 1.5707963267948966192313216916398
            uniforms:
                u_offset: [0,0]
                u_tilt_x: 0.1
                u_tilt_z: 0.1
            blocks:
                global: |
                    mat3 rotateX3D(float phi){
                        return mat3(
                            vec3(1.,0.,0.),
                            vec3(0.,cos(phi),-sin(phi)),
                            vec3(0.,sin(phi),cos(phi)));
                    }
                    mat3 rotateZ3D(float psi){
                        return mat3(
                            vec3(cos(psi),-sin(psi),0.),
                            vec3(sin(psi),cos(psi),0.),
                            vec3(0.,0.,1.));
                    }
                position: |
                    float z = smoothstep(0.7,1.,max((u_map_position.z)/20.,0.));
                    position.xyz = rotateX3D(u_tilt_x) * rotateZ3D(cos(u_offset.y)*u_tilt_z) * position.xyz;
    lin:
        mix: tilt
    poly:
        mix: tilt
        base: polygons
    walls:
        mix: poly 
        blend: overlay
        shaders:
            blocks:
                color: |
                    color = vec4(0, 1, 0, 0.1);

sources:
    osm:
        type: TopoJSON
        url:  //vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-JUsa0Gc
    subway:
        type: GeoJSON
        url: subway.geojson

layers:
    subway:
      data: { source: subway }
      draw:
        railway:
          style: lin
          order: function() { return  feature.layer; }
          color: function() { return feature.colour; }
          width: 8
          z: function() { return  feature.layer * 10; }
    roads:
      data: { source: osm }
      streets:
        filter:
            not: { kind: ["path", "rail"] }
        draw:
            roads:
                style: lin
                order: function() { return  (feature.layer || 0)+ 1; }
                color: [0.4, 0.4, 0.4]
                width: 8
            outline:
                style: lin
                order: function() { return  feature.layer; }
                color: [0.6, 0.6, 0.6]
                width: 10
    water:
        data: { source: osm }
        draw:
            water:
                style: poly
                order: 1
                color: [0.2, 0.2, 0.5]
            outline:
                order: 2
                style: lin
                color: [0.3, 0.3, 0.6]
                width: 2px
                tile_edges: false
    buildings:
        data: { source: osm }
        extruded:
            filter: { $zoom: { min: 13 } }
            draw:
                walls:
                    extrude: true
                walls-outline:
                    style: lin
                    order: 7
                    width: [[12, .1px], [14, 0.5px], [15, 1px], [17, 1.5px], [18, 2px]]
                    extrude: true
                    color: [0.654,0.897,1.000]
