import:
    - tilt.yaml
    - roads.yaml
    - landuse.yaml
    - https://tangrams.github.io/blocks/geometry/normal.yaml
global:
    order: function() { return feature.sort_key || 0; }
scene:
    background:
        color: white
cameras:
    camera1:
        type: perspective
        focal_length: 2
styles:
    lin:
        mix: tilt
    poly:
        mix: tilt
        base: polygons
    walls:
        mix: [poly, geometry-normal]
        blend: inlay
        shaders:
            blocks:
                color: |
                    if (isWall()) {
                        color = vec4(0.6, 0.6, 0.6, 0.5);
                    } else {
                        color = vec4(0.7, 0.7, 0.7, 0.2);
                    }

sources:
    osm:
        type: TopoJSON
        url:  //vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-JUsa0Gc
    rail:
        type: GeoJSON
        url: subway.geojson
    station:
        type: GeoJSON
        url: areas.geojson
layers:
    rail:
      data: { source: rail }
      draw:
          rail:
              style: lin
              order: gloal.order
              width: 1px
              z: function() { return  feature.layer * 10; }
              color: black
      rer:
          filter:  [network: RER]
          draw:
              rail:
                  color: function() { return feature.colour; }
                  width: 12
      transilien:
          filter:  [network: transilien]
          draw:
              rail:
                  color: function() { return feature.colour; }
                  width: 12
      subway:
          filter: [ network: RATP ]
          draw:
              rail:
                  color: function() { return feature.colour; }
                  width: 8

    station:
        data: { source: station }
        draw:
            polygons:
                style: poly
                color: black
                z: function() { return  feature.layer * 10; }
        corridor:
            filter: { buildingpart: corridor }
            draw:
                polygons:
                    color: blue
        vertical:
            filter: { buildingpart: verticalpassage }
            draw:
                polygons:
                    extruded: true
                    color: yellow
                    height: 10
                    z: function() { return (feature.layer - 1) * 10}
        room:
            filter: { buildingpart: room }
            draw:
                polygons:
                    style: lin
                    width: 3px
                    z: function() { return feature.layer * 10 - 1; }
    buildings:
        data: { source: osm }
        filter: { $zoom: { min: 13 } }
        draw:
            walls:
                extrude: true
            outline:
                order: global.order
                extrude: true
                style: lin
                color: black
                width: 0.5px
